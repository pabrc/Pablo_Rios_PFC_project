	component NIOSIImicro is
		port (
			clk_50_clk               : in    std_logic                     := 'X';             -- clk
			sdram_controller_addr    : out   std_logic_vector(11 downto 0);                    -- addr
			sdram_controller_ba      : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_controller_cas_n   : out   std_logic;                                        -- cas_n
			sdram_controller_cke     : out   std_logic;                                        -- cke
			sdram_controller_cs_n    : out   std_logic;                                        -- cs_n
			sdram_controller_dq      : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_controller_dqm     : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_controller_ras_n   : out   std_logic;                                        -- ras_n
			sdram_controller_we_n    : out   std_logic;                                        -- we_n
			pio_in_sw_export         : in    std_logic_vector(17 downto 0) := (others => 'X'); -- export
			pio_in_key_edge_export   : in    std_logic_vector(2 downto 0)  := (others => 'X'); -- export
			pio_in_ext_export        : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- export
			pio_out_red_export       : out   std_logic_vector(17 downto 0);                    -- export
			pio_out_green_export     : out   std_logic_vector(8 downto 0);                     -- export
			pio_out_ext_export       : out   std_logic_vector(7 downto 0);                     -- export
			pio_en_mux_export        : out   std_logic;                                        -- export
			pio_direc_export         : out   std_logic_vector(3 downto 0);                     -- export
			pio_direc_ram_export     : out   std_logic_vector(5 downto 0);                     -- export
			pio_wr_export            : out   std_logic;                                        -- export
			pio_sel_salida_export    : out   std_logic_vector(3 downto 0);                     -- export
			pio_datos_export         : out   std_logic_vector(31 downto 0);                    -- export
			pio_compara_int_0_export : in    std_logic                     := 'X';             -- export
			pio_compara_int_1_export : in    std_logic                     := 'X';             -- export
			pio_compara_int_2_export : in    std_logic                     := 'X';             -- export
			pio_compara_int_3_export : in    std_logic                     := 'X';             -- export
			pio_compara_int_4_export : in    std_logic                     := 'X';             -- export
			pio_captura_0_export     : in    std_logic                     := 'X';             -- export
			pio_captura_1_export     : in    std_logic                     := 'X';             -- export
			pio_captura_2_export     : in    std_logic                     := 'X';             -- export
			pio_captura_3_export     : in    std_logic                     := 'X';             -- export
			pio_captura_4_export     : in    std_logic                     := 'X';             -- export
			pio_in_32_export         : in    std_logic_vector(31 downto 0) := (others => 'X'); -- export
			lcd_RS                   : out   std_logic;                                        -- RS
			lcd_RW                   : out   std_logic;                                        -- RW
			lcd_data                 : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- data
			lcd_E                    : out   std_logic;                                        -- E
			dm9000a_iOSC_50          : in    std_logic                     := 'X';             -- iOSC_50
			dm9000a_ENET_DATA        : inout std_logic_vector(15 downto 0) := (others => 'X'); -- ENET_DATA
			dm9000a_ENET_CMD         : out   std_logic;                                        -- ENET_CMD
			dm9000a_ENET_RD_N        : out   std_logic;                                        -- ENET_RD_N
			dm9000a_ENET_WR_N        : out   std_logic;                                        -- ENET_WR_N
			dm9000a_ENET_CS_N        : out   std_logic;                                        -- ENET_CS_N
			dm9000a_ENET_RST_N       : out   std_logic;                                        -- ENET_RST_N
			dm9000a_ENET_CLK         : out   std_logic;                                        -- ENET_CLK
			dm9000a_ENET_INT         : in    std_logic                     := 'X';             -- ENET_INT
			pio_async_reset_export   : out   std_logic;                                        -- export
			reset_reset_n            : in    std_logic                     := 'X';             -- reset_n
			clock_100_clk            : out   std_logic;                                        -- clk
			sdram_clock_clk          : out   std_logic                                         -- clk
		);
	end component NIOSIImicro;

