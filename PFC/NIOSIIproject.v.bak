// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// PROGRAM		"Quartus II 64-Bit"
// VERSION		"Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"
// CREATED		"Tue Oct 14 16:51:54 2014"

module NIOSIIproject(
	CLOCK_50,
	ENET_INT,
	OTG_INT0,
	OTG_INT1,
	GPIO_0,
	KEY_EDGE,
	KEY_LEVEL,
	SW,
	DRAM_CLK,
	LCD_RS,
	LCD_RW,
	LCD_EN,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CS_N,
	DRAM_RAS_N,
	DRAM_WE_N,
	ENET_CMD,
	ENET_CS_N,
	ENET_RD_N,
	ENET_WR_N,
	ENET_RST_N,
	ENET_CLK,
	OTG_RD_N,
	OTG_WR_N,
	OTG_CS_N,
	OTG_RST_N,
	DRAM_ADDR,
	DRAM_BA,
	DRAM_DQ,
	DRAM_DQM,
	ENET_DATA,
	GPIO_1,
	LCD_DATA,
	LEDG,
	LEDR,
	OTG_ADDR,
	OTG_DATA,
	OTG_FSPEED,						//	USB Full Speed,	0 = Enable, Z = Disable
	OTG_LSPEED,						//	USB Low Speed, 	0 = Enable, Z = Disable
	OTG_DREQ0,						//	ISP1362 DMA Request 0
	OTG_DREQ1,						//	ISP1362 DMA Request 1
	OTG_DACK0_N,					//	ISP1362 DMA Acknowledge 0
	OTG_DACK1_N,					//	ISP1362 DMA Acknowledge 1
);


input wire	CLOCK_50;
input wire	ENET_INT;
input wire	OTG_INT0;
input wire	OTG_INT1;
input wire	[12:0] GPIO_0;
input wire	[1:0] KEY_EDGE;
input wire	[1:0] KEY_LEVEL;
input wire	[17:0] SW;
output wire	DRAM_CLK;
output wire	LCD_RS;
output wire	LCD_RW;
output wire	LCD_EN;
output wire	DRAM_CAS_N;
output wire	DRAM_CKE;
output wire	DRAM_CS_N;
output wire	DRAM_RAS_N;
output wire	DRAM_WE_N;
output wire	ENET_CMD;
output wire	ENET_CS_N;
output wire	ENET_RD_N;
output wire	ENET_WR_N;
output wire	ENET_RST_N;
output wire	ENET_CLK;
output wire	OTG_RD_N;
output wire	OTG_WR_N;
output wire	OTG_CS_N;
output wire	OTG_RST_N;
output wire	[11:0] DRAM_ADDR;
output wire	[1:0] DRAM_BA;
inout wire	[15:0] DRAM_DQ;
output wire	[1:0] DRAM_DQM;
inout wire	[15:0] ENET_DATA;
output wire	[13:0] GPIO_1;
inout wire	[7:0] LCD_DATA;
output wire	[8:0] LEDG;
output wire	[17:0] LEDR;
output wire	[1:0] OTG_ADDR;
inout wire	[15:0] OTG_DATA;

output			OTG_FSPEED;				//	USB Full Speed,	0 = Enable, Z = Disable
output			OTG_LSPEED;				//	USB Low Speed, 	0 = Enable, Z = Disable
input 			OTG_DREQ0;				//	ISP1362 DMA Request 0
input 			OTG_DREQ1;				//	ISP1362 DMA Request 1
output 			OTG_DACK0_N;			//	ISP1362 DMA Acknowledge 0
output 			OTG_DACK1_N;			//	ISP1362 DMA Acknowledge 1

wire	SYNTHESIZED_WIRE_0;
wire	SYNTHESIZED_WIRE_1;
wire	SYNTHESIZED_WIRE_2;
wire	SYNTHESIZED_WIRE_3;
wire	SYNTHESIZED_WIRE_4;
wire	SYNTHESIZED_WIRE_5;
wire	SYNTHESIZED_WIRE_6;
wire	SYNTHESIZED_WIRE_7;
wire	SYNTHESIZED_WIRE_8;
wire	SYNTHESIZED_WIRE_9;
wire	SYNTHESIZED_WIRE_10;
wire	[31:0] SYNTHESIZED_WIRE_11;
wire	SYNTHESIZED_WIRE_12;
wire	SYNTHESIZED_WIRE_13;
wire	SYNTHESIZED_WIRE_14;
wire	SYNTHESIZED_WIRE_15;
wire	[31:0] SYNTHESIZED_WIRE_16;
wire	[3:0] SYNTHESIZED_WIRE_17;
wire	[5:0] SYNTHESIZED_WIRE_18;
wire	[3:0] SYNTHESIZED_WIRE_19;

assign	SYNTHESIZED_WIRE_10 = 1;




NIOSIImicro	b2v_inst(
	.clk_clk(CLOCK_50),
	.pio_compara_int_0_export(SYNTHESIZED_WIRE_0),
	.pio_compara_int_1_export(SYNTHESIZED_WIRE_1),
	.pio_compara_int_2_export(SYNTHESIZED_WIRE_2),
	.pio_compara_int_3_export(SYNTHESIZED_WIRE_3),
	.pio_compara_int_4_export(SYNTHESIZED_WIRE_4),
	.pio_captura_0_export(SYNTHESIZED_WIRE_5),
	.pio_captura_1_export(SYNTHESIZED_WIRE_6),
	.pio_captura_2_export(SYNTHESIZED_WIRE_7),
	.pio_captura_3_export(SYNTHESIZED_WIRE_8),
	.pio_captura_4_export(SYNTHESIZED_WIRE_9),
	.dm9000a_iOSC_50(CLOCK_50),
	.dm9000a_ENET_INT(ENET_INT),
	.reset_reset_n(SYNTHESIZED_WIRE_10),
	.isp1362_INT0(OTG_INT0),
	.isp1362_INT1(OTG_INT1),
	.dm9000a_ENET_DATA(ENET_DATA),
	.isp1362_DATA(OTG_DATA),
	.lcd_data(LCD_DATA),
	.pio_in_32_export(SYNTHESIZED_WIRE_11),
	.pio_in_ext_export(GPIO_0[7:0]),
	.pio_in_key_edge_export(KEY_EDGE),
	.pio_in_key_level_export(KEY_LEVEL),
	.pio_in_sw_export(SW),
	.sdram_controller_dq(DRAM_DQ),
	.sdram_clock_clk(DRAM_CLK),
	.clock_100_clk(SYNTHESIZED_WIRE_13),
	.sdram_controller_cas_n(DRAM_CAS_N),
	.sdram_controller_cke(DRAM_CKE),
	.sdram_controller_cs_n(DRAM_CS_N),
	.sdram_controller_ras_n(DRAM_RAS_N),
	.sdram_controller_we_n(DRAM_WE_N),
	.pio_en_mux_export(SYNTHESIZED_WIRE_14),
	.pio_wr_export(SYNTHESIZED_WIRE_15),
	.lcd_RS(LCD_RS),
	.lcd_RW(LCD_RW),
	.lcd_E(LCD_EN),
	
	.dm9000a_ENET_CMD(ENET_CMD),
	.dm9000a_ENET_RD_N(ENET_RD_N),
	.dm9000a_ENET_WR_N(ENET_WR_N),
	.dm9000a_ENET_CS_N(ENET_CS_N),
	.dm9000a_ENET_RST_N(ENET_RST_N),
	.dm9000a_ENET_CLK(ENET_CLK),
	.pio_async_reset_export(SYNTHESIZED_WIRE_12),
	.isp1362_RD_N(OTG_RD_N),
	.isp1362_WR_N(OTG_WR_N),
	.isp1362_CS_N(OTG_CS_N),
	.isp1362_RST_N(OTG_RST_N),
	
	.isp1362_ADDR(OTG_ADDR),
	
	
	.pio_datos_export(SYNTHESIZED_WIRE_16),
	.pio_direc_export(SYNTHESIZED_WIRE_17),
	.pio_direc_ram_export(SYNTHESIZED_WIRE_18),
	.pio_out_ext_export(GPIO_1[7:0]),
	.pio_out_green_export(LEDG),
	.pio_out_red_export(LEDR),
	.pio_sel_salida_export(SYNTHESIZED_WIRE_19),
	.sdram_controller_addr(DRAM_ADDR),
	.sdram_controller_ba(DRAM_BA),
	
	.sdram_controller_dqm(DRAM_DQM));


Unidad_Operativa	b2v_inst1(
	.async_reset(SYNTHESIZED_WIRE_12),
	.clk(CLOCK_50),
	.clk_100(SYNTHESIZED_WIRE_13),
	.en_mux(SYNTHESIZED_WIRE_14),
	.wr(SYNTHESIZED_WIRE_15),
	.captura_0(GPIO_0[8]),
	.captura_1(GPIO_0[9]),
	.captura_2(GPIO_0[10]),
	.captura_3(GPIO_0[11]),
	.captura_4(GPIO_0[12]),
	.datos(SYNTHESIZED_WIRE_16),
	.direc(SYNTHESIZED_WIRE_17),
	.direc_ram(SYNTHESIZED_WIRE_18),
	.sel_salida(SYNTHESIZED_WIRE_19),
	.pwm_out(GPIO_1[13]),
	.compara_int_0(SYNTHESIZED_WIRE_0),
	.compara_out_0(GPIO_1[8]),
	.compara_int_1(SYNTHESIZED_WIRE_1),
	.compara_out_1(GPIO_1[9]),
	.compara_int_2(SYNTHESIZED_WIRE_2),
	.compara_out_2(GPIO_1[10]),
	.compara_int_3(SYNTHESIZED_WIRE_3),
	.compara_out_3(GPIO_1[11]),
	.compara_int_4(SYNTHESIZED_WIRE_4),
	.compara_out_4(GPIO_1[12]),
	.captura_int_0(SYNTHESIZED_WIRE_5),
	.captura_int_1(SYNTHESIZED_WIRE_6),
	.captura_int_2(SYNTHESIZED_WIRE_7),
	.captura_int_3(SYNTHESIZED_WIRE_8),
	.captura_int_4(SYNTHESIZED_WIRE_9),
	.datos_out(SYNTHESIZED_WIRE_11));



endmodule
